name: YouTube-Short-Daily

on:
  schedule:
    # Morning runs for Denmark (UTC+2)
    - cron: '0 7 * * *'   # 09:00 Danish time (UTC+2)
    - cron: '0 8 * * *'   # 10:00 Danish time (UTC+2)
    - cron: '0 9 * * *'   # 11:00 Danish time (UTC+2)
    - cron: '0 10 * * *'  # 12:00 Danish time (UTC+2)
    # Europe Afternoon / Early Evening (good for Danish/European + India/China overlap)
    - cron: '0 13 * * *'  # 15:00 Danish time (UTC+2)
    - cron: '0 15 * * *'  # 17:00 Danish time (UTC+2)
    - cron: '0 17 * * *'  # 19:00 Danish time (UTC+2)
    # USA East Coast prime time (19:00–22:00 EST) / Danish late night/early morning
    - cron: '0 23 * * *'  # 01:00 Danish time next day (UTC+2) / 19:00 EST
    - cron: '0 0 * * *'   # 02:00 Danish time (UTC+2) / 20:00 EST
    - cron: '0 1 * * *'   # 03:00 Danish time (UTC+2) / 21:00 EST
    - cron: '0 2 * * *'   # 04:00 Danish time (UTC+2) / 22:00 EST
    # USA West Coast prime time (19:00–22:00 PST) / Danish very early morning
    - cron: '0 3 * * *'   # 05:00 Danish time (UTC+2) / 20:00 PST
    - cron: '0 4 * * *'   # 06:00 Danish time (UTC+2) / 21:00 PST
    - cron: '0 5 * * *'   # 07:00 Danish time (UTC+2) / 22:00 PST
  workflow_dispatch:

jobs:
  run-notebook:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      CLIENT_SECRETS_JSON: ${{ secrets.CLIENT_SECRETS_JSON }}
      TOKEN_JSON: ${{ secrets.TOKEN_JSON }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GAMEPLAY_URL: ${{ secrets.GAMEPLAY_URL }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install lxml[html_clean]>=4.9.0
        pip install -r requirements.txt
        pip install nbconvert>=7.0 ipykernel
        python -m ipykernel install --user --name python3 --display-name "Python 3.11"

    - name: Verify Google Drive access
      run: |
        FILE_ID=$(echo "${{ secrets.GAMEPLAY_URL }}" | grep -oP 'id=\K[^&]+')
        echo "Testing download for file ID: $FILE_ID"
        gdown --version
        gdown --id $FILE_ID -O test.mp4 || \
        curl -L -o test.mp4 "https://drive.google.com/uc?export=download&id=$FILE_ID"
        ls -lh test.mp4
        file test.mp4
        rm test.mp4

    - name: Prepare params file
      run: echo '{}' > params.json

    - name: Execute notebook
      run: |
        jupyter nbconvert --execute --to notebook \
          --inplace "Youtube Automation Trigger - Test 4.ipynb" \
          --ExecutePreprocessor.kernel_name=python3 \
          --ExecutePreprocessor.timeout=1800

    - name: Upload finished MP4
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: short
        path: shorts_final.mp4

    - name: Upload debug info
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: |
          *.log
          nbconvert*.out
